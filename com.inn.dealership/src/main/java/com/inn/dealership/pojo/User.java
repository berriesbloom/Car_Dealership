package com.inn.dealership.pojo;


import jakarta.persistence.*;
import lombok.Data;
import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

import java.io.Serializable;

/**
 * A POJO class is a Plain Old Java Object.
 * This class encapsulates data without any special requirements imposed by a framework.
 * Re-usable
 *
 * Annotations:
 * - @Id is used to specify the primary key of an entity.
 * - GeneratedValue(strategy = GenerationType.IDENTITY) is to indicate that the primary keys are generated by the DB itself using the
 * auto-increment option.
 * - @Column is used to specify the mapping of Java class to the DB columns
 * - @Data is used for reducing boilerplate code. It auto-generates getters, setters, constructor, toString()
 * - @Entity - used to mark a Java class as an entity, meaning it will be persisted to a database table.
 * - @DynamicInsert - used to specify that Hibernate should generate SQL Insert statements.
 */


@NamedQuery(name = "User.findByEmailId", query = "select u from User u where u.email=:email")
@NamedQuery(name = "User.findByUserId", query = "select u from User u where u.id=:id")
@NamedQuery(name = "User.getAllUsers", query = "select new com.inn.dealership.wrapper.UserWrapper(u.id, u.name, u.email, u.contactNumber, u.status) from User u where u.role='user'")
@NamedQuery(name = "User.updateStatus", query = "update User u set u.status=:status where u.id=:id")
@NamedQuery(name = "User.deleteUserById", query = "delete User u where u.id=:id")

@Data
@Entity
@DynamicInsert
@DynamicUpdate
@Table(name = "user")
public class User implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Integer id;

    @Column(name ="name")
    private String name;

    @Column(name = "contactNumber")
    private String contactNumber;

    //email is the username
    @Column(name = "email")
    private String email;

    @Column(name = "password")
    private String password;

    @Column(name = "status")
    private String status;

    @Column(name = "role")
    private String role;


}
